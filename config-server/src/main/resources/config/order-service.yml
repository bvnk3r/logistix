spring:
  cloud:
    function:
      definition: updateOrderDeliveryStatusSink; updateOrderPaymentStatusSink
    stream:
      kafka:
        binder:
          brokers: localhost
      bindings:
        updateOrderDeliveryStatusSink-in-0:
          destination: deliveryStatusTopic
          group: orderServiceGroup
        updateOrderPaymentStatusSink-in-0:
          destination: paymentStatusTopic
          group: orderServiceGroup
        payment-out-0:
          destination: createPaymentTopic
        delivery-out-0:
          destination: createDeliveryTopic
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://127.0.0.1:5432/order-service
    username: postgres
    password: postgres
  jpa:
    hibernate:
      ddl-auto: none
  liquibase:
    change-log: classpath:database/db.changelog-master.xml
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/logistix
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

token:
  converter:
    principal-attribute: preferred_username
    resource-id: order-service

eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
  instance:
    preferIpAddress: true

resilience4j.circuitbreaker:
  instances:
    orderService:
      registerHealthIndicator: true
      ringBufferSizeInClosedState: 5
      ringBufferSizeInHalfOpenState: 3
      waitDurationInOpenState: 10s
      failureRateThreshold: 50